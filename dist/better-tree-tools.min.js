var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function _defineProperty(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}!function(t,e){"function"==typeof define&&define.amd?define(e):"undefined"!=typeof module&&module.exports?module.exports=e():(t="undefined"!=typeof globalThis?globalThis:t).BetterTreeTools=e()}(this,function(){function t(t){this.config=Object.assign({id:"id",pId:"pId",children:"children"},t)}return t.prototype={typeIs:function(t){return Object.prototype.toString.call(t).slice(8,-1).toLowerCase()},deepCopy:function(t){var r=this,n="array"===this.typeIs(t)?[]:{},o=["array","object"];if(!o.includes(this.typeIs(t)))return t;return function(t){for(var e in t)t.hasOwnProperty(e)&&("object"===_typeof(t[e])&&o.includes(r.typeIs(t[e]))?n[e]=r.deepCopy(t[e]):n[e]=t[e])}(t),n},listToTree:function(t){var e=this.config,r=e.id,n=e.pId,o=e.children,i=[];if("array"!==this.typeIs(t))return i;t.forEach(function(t){delete t[o]});var s={};return t.forEach(function(t){s[t[r]]=t}),t.forEach(function(t){var e=s[t[n]];(e?e[o]||(e[o]=[]):i).push(t)}),i},listFastToTree:function(t){var e=this.config,r=e.id,n=e.pId,o=e.children,i=[],s={},f=!0,u=!1,c=void 0;try{for(var d=t[Symbol.iterator]();!(f=(p=d.next()).done);f=!0){var h=p.value,l=h[r],p=h[n];s[l]||(s[l]=_defineProperty({},o,[])),s[l]=Object.assign(h,_defineProperty({},o,s[l][o])),p?(s[p]||(s[p]=_defineProperty({},o,[])),s[p][o].push(s[l])):i.push(s[l])}}catch(t){u=!0,c=t}finally{try{!f&&d.return&&d.return()}finally{if(u)throw c}}return i},treeToList:function(t){function s(e){0===r.filter(function(t){return t[n]===e[n]}).length&&r.push(e)}var f=this,r=[],e=this.config,u=e.children,n=e.id,t=this.deepCopy(t);return function t(e){if("array"!==f.typeIs(e))s(e);else for(var r=0,n=e.length;r<n;r++){var o,i=e[r];i[u]&&"array"===f.typeIs(i[u])?(o=f.deepCopy(i[u]),delete i[u],s(i),t(o)):s(i)}}(t),r},getNode:function(t,e){for(var r=0<arguments.length&&void 0!==t?t:[],n=e,r=this.deepCopy(r),o=this.config.id,i=this.treeToList(r),s=0,f=i.length;s<f;s++){var u=i[s];if(u[o]===n)return u}return null},getNodeList:function(t,e){for(var r=0<arguments.length&&void 0!==t?t:[],n=1<arguments.length&&void 0!==e?e:{},o=this.deepCopy(r),r=this.config,i=r.id,s=r.pId,f=n[i],u=n[s],c=[],d=this.treeToList(o),h=0,l=d.length;h<l;h++){var p=d[h];p[i]!==f&&p[s]!==u||c.push(p)}return c},removeNode:function(t,e){for(var r=0<arguments.length&&void 0!==t?t:[],n=1<arguments.length&&void 0!==e?e:{},o=this.config,i=o.id,s=o.pId,f=n[i],u=n[s],c=this.treeToList(r),d=0,h=c.length;d<h;d++){var l=c[d];l&&(l[i]!==f&&l[s]!==u||(delete c[d],--d))}return this.listToTree(c)},insert:function(t,e){for(var r=this.treeToList(t),n=0,o=r.length;n<o;n++)r[n].sort=n;t=this.getNode(r,e.pId);t&&(e.pId=t.id,e.sort=t.sort-1),r.push(e);e=this.listToTree(r);return this.sort(e)},sort:function(t){var r=this,n=this.config.children;return function e(t){t=t.sort(function(t,e){return t.sort-e.sort});t.length&&t.forEach(function(t){"array"===r.typeIs(t[n])&&e(t[n])})}(t),t}},t});